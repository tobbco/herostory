syntax = "proto3";
package org.herostory.protobuf;
option java_package = "org.herostory.protobuf.bean";
// 因为游戏前端使用的是写好的内容,所以内容上沿用的是userId或者userInfo
//消息id
enum GameCmdId {
  //客户端进入请求id
  HERO_ENTRY_CMD = 0;
  //服务端进入结果id
  HERO_ENTRY_RESULT = 1;

  //在线玩家信息
  ONLINE_HERO_CMD = 2;

  //在线玩家响应id
  ONLINE_HERO_RESULT = 3;

  //用户移动请求id
  HERO_MOVE_CMD = 4;
  //用户移动响应
  HERO_MOVE_RESULT = 5;
  //用户断开连接响应id
  HERO_DISCONNECT_RESULT = 6;
  //用户停止移动请求id
  HERO_STOP_CMD = 7;
  //用户停止移动响应id
  HERO_STOP_RESULT = 8;
  //用户攻击请求id
  HERO_ATTACK_CMD = 9;
  //用户攻击响应id
  HERO_ATTACK_RESULT = 10;
  //用户减血请求id
  HERO_SUBTRACT_HP_RESULT = 11;
  //用户死亡响应id
  HERO_DIE_RESULT = 12;
  //英雄登录请求id
  HERO_LOGIN_CMD = 13;
  //英雄登录响应id
  HERO_LOGIN_RESULT = 14;
  //选择英雄请求id
  SELECT_HERO_CMD = 15;
  //选择英雄响应id
  SELECT_HERO_RESULT = 16;
  //获取排行榜请求id
  GET_RANK_CMD = 17;
  //获取排行榜响应id
  GET_RANK_RESULT = 18;
}
//英雄入口请求
message HeroEntryCmd {
  //用户id
  uint32 userId = 1;
  //英雄形象
  string heroAvatar = 2;
}

//英雄入口响应
message  HeroEntryResult {
  // 用户 Id
  uint32 userId = 1;
  // 用户名称
  string userName = 2;
  // 英雄形象
  string heroAvatar = 3;
}

//在线用户请求
message  OnlineHeroCmd {

}
//在线用户响应
message  OnlineHeroResult {
  //英雄信息集合,相当于java中的 HeroInfo[] userInfo
  repeated HeroInfo userInfo = 1;

  //英雄信息
  message HeroInfo {
    // 用户 Id
    uint32 userId = 1;
    // 用户名称
    string userName = 2;
    // 英雄形象
    string heroAvatar = 3;
    // 移动状态
    MoveState moveState = 4;

    // 移动状态
    message MoveState {
      // 起始位置 X
      float fromPosX = 1;
      // 起始位置 Y
      float fromPosY = 2;
      // 移动到位置 X
      float toPosX = 3;
      // 移动到位置 Y
      float toPosY = 4;
      // 启程时间戳
      uint64 startTime = 5;
    }

  }
}

//用户移动请求，从哪到哪
message HeroMoveCmd {
  // 起始位置 X
  float moveFromPosX = 1;
  // 起始位置 Y
  float moveFromPosY = 2;
  //用户坐标
  float moveToPosX = 3;
  float moveToPosY = 4;
}

message HeroMoveResult {
  // 移动用户 Id
  uint32 moveUserId = 1;
  // 起始位置 X
  float moveFromPosX = 2;
  // 起始位置 Y
  float moveFromPosY = 3;
  // 移动到位置 X
  float moveToPosX = 4;
  // 移动到位置 Y
  float moveToPosY = 5;
  // 启程时间戳
  uint64 moveStartTime = 6;
}

//用户断开连接响应
message  HeroDisconnectResult {
  //用户id
  uint32 quitUserId = 1;
}

message HeroStopCmd {
}

message HeroStopResult {
  // 停驻用户 Id
  uint32 stopUserId = 1;
  // 停驻在位置 X
  float stopAtPosX = 2;
  // 停驻在位置 Y
  float stopAtPosY = 3;
}

message HeroAttackCmd {
  // 被攻击的用户 Id
  uint32 targetUserId = 1;
}

message HeroAttackResult {
  // 发动攻击的用户 Id
  uint32 attkUserId = 1;
  // 目标用户 Id
  uint32 targetUserId = 2;
}

message HeroSubtractHpResult {
  // 目标用户 Id
  uint32 targetUserId = 1;
  // 减血量
  uint32 subtractHp = 2;
}

message HeroDieResult {
  // 死亡用户 Id
  uint32 targetUserId = 1;
}
message HeroLoginCmd {
  // 用户名称
  string userName = 1;
  // 用户密码
  string password = 2;
}

message HeroLoginResult {
  // 用户 Id,
  // 如果是 -1 则说明登录失败
  uint32 userId = 1;
  // 用户名称
  string userName = 2;
  // 英雄形象
  string heroAvatar = 3;
}

message SelectHeroCmd {
  // 英雄形象
  string heroAvatar = 1;
}

message SelectHeroResult {
  // 英雄形象,
  // 如果是空字符串则说明失败
  string heroAvatar = 1;
}
// 获取排行榜请求
message GetRankCmd {
}
//获取排行榜响应
message GetRankResult {
  // 排名条目
  repeated RankItem rankItem = 1;

  // 用户信息
  message RankItem {
    // 排名 Id
    uint32 rankId = 1;
    // 用户 Id
    uint32 userId = 2;
    // 用户名称
    string userName = 3;
    // 英雄形象
    string heroAvatar = 4;
    // 胜利次数
    uint32 win = 5;
  }
}